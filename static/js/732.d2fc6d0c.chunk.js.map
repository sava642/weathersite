{"version":3,"file":"static/js/732.d2fc6d0c.chunk.js","mappings":"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","sources":["features/map/MapWithLocation.tsx","shared/Spinner.tsx","features/weather/WeatherDetails.tsx","shared/AddIcon.tsx","shared/DeleteIcon.tsx","shared/Favorites.tsx","shared/ResentResults.tsx","pages/Main/Main.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { useDispatch } from 'react-redux';\nimport \"leaflet/dist/leaflet.css\";\nimport { Icon } from 'leaflet';\nimport { fetchWeather } from '../../entities/forecast/fetchWeather';\nimport { AppDispatch } from '../../app/store';\nimport { useParams } from 'react-router-dom';\nconst customIcon = new Icon({\n\ticonUrl: 'https://cdn4.iconfinder.com/data/icons/small-n-flat/24/map-marker-1024.png',\n\ticonSize: [24, 24], // Размер иконки\n});\n\nconst MapWithLocation: React.FC = () => {\n\tconst dispatch: AppDispatch = useDispatch();\n\tconst mapRef = useRef<any>();\n\tconst { lat, lon } = useParams<{ lat?: string; lon?: string }>(); // Обновляем типы параметров\n\n\tconst [position, setPosition] = useState<[number, number]>([0, 0]); // Устанавливаем начальные координаты\n\n\tuseEffect(() => {\n\t\t// Если lat и lon определены, обновляем позицию\n\t\tif (lat && lon) {\n\t\t\tconst latFloat = parseFloat(lat);\n\t\t\tconst lonFloat = parseFloat(lon);\n\t\t\tsetPosition([latFloat, lonFloat]);\n\t\t\tdispatch(fetchWeather({ latitude: latFloat, longitude: lonFloat }));\n\t\t}\n\t}, [lat, lon, dispatch]);\n\n\tconst handleMarkerDrag = (e: any) => {\n\t\tconst newPosition = e.target.getLatLng();\n\t\tdispatch(fetchWeather({ latitude: newPosition.lat, longitude: newPosition.lng }));\n\t};\n\n\tuseEffect(() => {\n\t\t// Центрируем карту при обновлении позиции маркера\n\t\tif (mapRef.current) {\n\t\t\tmapRef.current.setView(position);\n\t\t}\n\t}, [position]);\n\treturn (\n\t\t<div className=\"custom-map-container\" >\n\t\t\t<MapContainer center={position} zoom={3} style={{ width: '100%', height: '100%' }} ref={mapRef}>\n\t\t\t\t<TileLayer\n\t\t\t\t\turl=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n\t\t\t\t\tattribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n\t\t\t\t/>\n\t\t\t\t<Marker position={position} icon={customIcon} draggable={true} eventHandlers={{ dragend: handleMarkerDrag }}>\n\t\t\t\t\t<Popup>Your location</Popup>\n\t\t\t\t</Marker>\n\t\t\t</MapContainer>\n\t\t</div>\n\t);\n};\n\nexport default MapWithLocation;\n\n\n\n","import styled from \"styled-components\";\n\nexport const Spinner = styled.div`\nmargin: 40px;\n  border: 12px solid pink;\n  border-top: 12px deeppink solid;\n  border-radius: 50%;\n  height: 60px;\n  width: 60px;\n  animation: spin 2s linear infinite;\n  /* \n  border: 12px solid #f3f3f3; \n  border-top: 12px solid #3498db;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: spin 2s linear infinite; */\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { forecastSelector } from '../../entities/forecast';\nimport { Spinner } from '../../shared/Spinner';\nimport styled from 'styled-components';\n\nconst WeatherDetailsContainer = styled.div`\n  position: absolute;\n  z-index: 9999;\n  top: 20%;\n  right: 10px;\n  transform: translateY(-80%);\n  ul {\n\tlist-style-type: none;\n\tpadding: 0;\n\tmargin: 0;\n }\n\n li {\n\ttext-decoration: none;\n\tcolor: #333;\n`;\n\nconst WeatherDetails = () => {\n\tconst weatherData = useSelector(forecastSelector);\n\n\tconst { name, temperature, feelsLike, humidity, pressure, windSpeed } = useMemo(() => weatherData, [weatherData]);\n\n\tconst convertToCelsius = (temp: number) => Math.round(temp - 273.15);\n\n\tif (!name || !temperature || !feelsLike || !humidity || !pressure || !windSpeed) {\n\t\treturn <Spinner />;\n\t}\n\n\treturn (\n\t\t<WeatherDetailsContainer>\n\t\t\t<p>{name}</p>\n\t\t\t<ul>\n\t\t\t\t<li>Temperature: {convertToCelsius(temperature)} °C</li>\n\t\t\t\t<li>Feels like: {convertToCelsius(feelsLike)} °C</li>\n\t\t\t\t<li>Humidity: {humidity}%</li>\n\t\t\t\t<li>Pressure: {pressure} hPa</li>\n\t\t\t\t<li>Wind speed: {windSpeed} m/s</li>\n\t\t\t</ul>\n\t\t</WeatherDetailsContainer>\n\t);\n};\n\nexport default WeatherDetails;\n\n\n","import React from 'react';\nimport { MdFormatListBulletedAdd } from 'react-icons/md';\nimport styled from 'styled-components';\n\ninterface Props {\n\tonClick: () => void;\n}\n\nconst StyledAddIcon = styled(MdFormatListBulletedAdd)`\n\tposition: absolute;\n\ttop: 20px;\n\tright: 20px;\n\tz-index: 9999;\n\tcolor: yellow;\n\tfont-size: 48px;\n\tcursor: pointer;\n`;\n\nconst AddIcon: React.FC<Props> = ({ onClick }) => {\n\treturn <StyledAddIcon onClick={onClick} />;\n};\n\nexport default AddIcon;\n","import React from 'react';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\ninterface Props {\n\tonClick: () => void;\n}\n\nconst DeleteIcon: React.FC<Props> = ({ onClick }) => {\n\treturn <AiOutlineCloseCircle color=\"red\" size={24} onClick={onClick} />;\n};\n\nexport default DeleteIcon;\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/reducers';\nimport { removeFavoriteCity } from '../entities/favorites';\nimport { AppDispatch } from '../app/store';\nimport DeleteIcon from './DeleteIcon';\nimport { addSelectedCity } from '../entities/citysearch';\nimport { useNavigate } from 'react-router-dom';\n\ninterface LocalNames {\n\t[language: string]: string;\n}\n\ninterface City {\n\tname: string;\n\tlat: string;\n\tlon: string;\n\tcountry: string;\n\tstate: string;\n\tlocal_names: LocalNames;\n}\n\nconst SquareContainer = styled.div`\n  border-radius: 10px;\n  background-color: #00ccff;\n  z-index: 99999;\n  overflow: auto;\n  width: 100%;\n  height: 100%;\n`;\n\nconst SquarWrapper = styled.div`\n  position: fixed;\n  right: 20px;\n  bottom: 60px;\n  z-index: 99999;\n  width: 40%;\n  height: 20%;\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  border-bottom: 1px solid #ccc;\n  cursor: pointer;\n`;\n\nconst Favorites = () => {\n\tconst dispatch: AppDispatch = useDispatch();\n\tconst navigate = useNavigate();\n\tconst favorites = useSelector((state: RootState) => state.favoritescities.favoritescities);\n\n\tconst handleCityClick = (city: City) => {\n\t\tdispatch(addSelectedCity({ city }));\n\t\tconst path = `/city/${city.name}/${city.lat}/${city.lon}`;\n\t\tnavigate(path, { replace: false });\n\t};\n\n\tconst handleDeleteClick = (cityName: string) => {\n\t\tdispatch(removeFavoriteCity({ cityName }));\n\t};\n\n\treturn (\n\t\t<SquarWrapper>\n\t\t\t<p>Favorites</p>\n\t\t\t<SquareContainer>\n\t\t\t\t{favorites.map((item: City, index) => (\n\t\t\t\t\t<ListItem key={index} onClick={() => handleCityClick(item)}>\n\t\t\t\t\t\t<span>{item.name}</span>\n\t\t\t\t\t\t<DeleteIcon onClick={() => handleDeleteClick(item.name)} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</SquareContainer>\n\t\t</SquarWrapper>\n\t);\n};\n\nexport default Favorites;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../app/reducers';\nimport { addSelectedCity } from '../entities/citysearch';\nimport { useNavigate } from 'react-router-dom';\ninterface LocalNames {\n\t[language: string]: string;\n}\ninterface City {\n\tname: string;\n\tlat: string;\n\tlon: string;\n\tcountry: string;\n\tstate: string;\n\tlocal_names: LocalNames;\n}\n\nconst SquareContainer = styled.div`\n\tborder-radius: 10px;\n\tbackground-color: #00ccff;\n\tz-index: 99999;\n\toverflow: auto;\n\twidth: 100%;\n\theight: 100%;\n`;\nconst SquarWrapper = styled.div`\n\tposition: fixed;\n\tleft: 20px;\n\tbottom: 60px;\n\tz-index: 99999;\n\twidth: 40%;\n\theight: 20%;\n`;\n\nconst ListItem = styled.div`\n\tpadding: 8px;\n\tborder-bottom: 1px solid #ccc;\n\tcursor: pointer;\n`;\n\nconst ResentResults = () => {\n\tconst dispatch = useDispatch();\n\tconst navigate = useNavigate();\n\tconst selectedCities = useSelector((state: RootState) => state.cities.selectedCities);\n\n\tconst handleCityClick = (city: City) => {\n\t\tdispatch(addSelectedCity({ city }));\n\t\tconst path = `/city/${city.name}/${city.lat}/${city.lon}`;\n\t\tnavigate(path, { replace: false });\n\t};\n\n\treturn (\n\t\t<SquarWrapper>\n\t\t\t<p>Resent results</p>\n\t\t\t<SquareContainer>\n\t\t\t\t{selectedCities.map((item: City, index: React.Key | null | undefined) => (\n\t\t\t\t\t<ListItem key={index} onClick={() => handleCityClick(item)} >\n\t\t\t\t\t\t{item.name}\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</SquareContainer>\n\t\t</SquarWrapper>\n\t);\n};\n\nexport default ResentResults;\n\n\n","import React from 'react';\nimport { CitySearch } from '../../entities/citysearch';\nimport MapWithLocation from '../../features/map/MapWithLocation';\nimport WeatherDetails from '../../features/weather/WeatherDetails';\nimport AddIcon from '../../shared/AddIcon';\nimport Favorites from '../../shared/Favorites';\nimport ResentResults from '../../shared/ResentResults';\nimport { addFavoriteCity } from '../../entities/favorites'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../app/reducers';\nimport { AppDispatch } from '../../app/store';\n\n\n\n\nconst Main: React.FC = () => {\n\tconst dispatch: AppDispatch = useDispatch();\n\tconst currentCity = useSelector((state: RootState) => state.cities.currentCity);\n\n\n\tconst handleAddClick = () => {\n\t\tif (currentCity !== null) {\n\t\t\tdispatch(addFavoriteCity({ city: currentCity }));\n\t\t}\n\t}\n\treturn (\n\t\t<div style={{ position: 'relative' }}>\n\t\t\t<MapWithLocation />\n\t\t\t<CitySearch />\n\t\t\t<ResentResults />\n\t\t\t<Favorites />\n\t\t\t<AddIcon onClick={() => handleAddClick()} />\n\t\t\t<WeatherDetails />\n\t\t</div>\n\t);\n}\n\nexport default Main;\n"],"names":["customIcon","Icon","iconUrl","iconSize","MapWithLocation","dispatch","useDispatch","mapRef","useRef","lat","lon","useParams","position","setPosition","useState","useEffect","latFloat","parseFloat","lonFloat","fetchWeather","latitude","longitude","current","setView","_jsx","className","children","_jsxs","MapContainer","center","zoom","style","width","height","ref","TileLayer","url","attribution","Marker","icon","draggable","eventHandlers","dragend","e","newPosition","target","getLatLng","lng","Popup","Spinner","styled","div","_templateObject","_taggedTemplateLiteral","WeatherDetailsContainer","WeatherDetails","weatherData","useSelector","forecastSelector","name","temperature","feelsLike","humidity","pressure","windSpeed","useMemo","convertToCelsius","temp","Math","round","StyledAddIcon","MdFormatListBulletedAdd","_ref","onClick","AiOutlineCloseCircle","color","size","SquareContainer","SquarWrapper","_templateObject2","ListItem","_templateObject3","Favorites","navigate","useNavigate","favorites","state","favoritescities","map","item","index","city","addSelectedCity","path","concat","replace","handleCityClick","DeleteIcon","handleDeleteClick","cityName","removeFavoriteCity","ResentResults","selectedCities","cities","Main","currentCity","CitySearch","AddIcon","addFavoriteCity"],"sourceRoot":""}